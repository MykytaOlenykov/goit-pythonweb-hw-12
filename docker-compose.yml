version: "3.9"

services:
  postgresdb:
    image: postgres:latest
    container_name: postgresdb
    restart: no
    ports:
      - "5432:5432"
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 1m30s
      timeout: 5s
      retries: 5
      start_period: 1s
    env_file:
      - .env
    networks:
      - pythonweb_postgresdb_networks
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data

  redisdb:
    image: redis:7.4
    command: redis-server --appendonly yes
    container_name: redisdb
    restart: no
    ports:
      - "6379:6379"
    expose:
      - "6379"
    networks:
      - pythonweb_redisdb_networks
    volumes:
      - ./volumes/redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 1s

  contacts_api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: contacts_api
    restart: no
    ports:
      - "8000:8000"
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      postgresdb:
        condition: service_healthy
      redisdb:
        condition: service_healthy
    networks:
      - pythonweb_postgresdb_networks
      - pythonweb_redisdb_networks
    volumes:
      - ./src:/app/src:rw

networks:
  pythonweb_postgresdb_networks:
    driver: bridge
  pythonweb_redisdb_networks:
    driver: bridge
